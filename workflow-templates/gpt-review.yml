name: GPT Review on Pull Request

on:
  pull_request_target:
    branches: ["master"]

jobs:
  add_pr_comment:
    runs-on: ubuntu-latest
    name: OpenAI PR Comment
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install gpt-review
        shell: bash
        run: |
          sudo apt-get update
          python3 -m venv .env
          source .env/bin/activate
          python -m pip install --upgrade pip
          python -m pip install gpt-review==0.9.5
          python -m pip install langchain==0.0.301
          python -m pip install pydantic==1.10.13

      - name: Create context file
        run: |
          echo "azure_api_type: openai" > context.yaml
          echo "azure_model_map:" >> context.yaml
          echo "  turbo_llm_model_deployment_id: gpt-35-turbo" >> context.yaml
          echo "  smart_llm_model_deployment_id: gpt-4" >> context.yaml
          echo "  large_llm_model_deployment_id: gpt-3.5-turbo-16k-0613" >> context.yaml
          echo "  embedding_model_deployment_id: text-embedding-ada-002" >> context.yaml
          echo "CONTEXT_FILE=$(pwd)/context.yaml" >> $GITHUB_ENV

      - name: Create and save the prompt files
        run: |
          echo '_type: prompt' > bug.yaml
          echo 'input_variables:' >> bug.yaml
          echo '    ["diff"]' >> bug.yaml
          echo 'template: |' >> bug.yaml
          echo '  코드에서 발견된 버그의 특징을 한글로 간략하게 요약하여 설명합니다,' >> bug.yaml
          echo '  위치 및 애플리케이션의 전반적인 기능과 성능에 미치는 잠재적인 영향.' >> bug.yaml
          echo '  잠재적인 문제와 오류를 먼저 제시하고 가장 중요한 결과를 요약하여 제시합니다.' >> bug.yaml
          echo '  ' >> bug.yaml
          echo '  {diff}' >> bug.yaml
          echo 'PROMPT_BUG=$(pwd)/bug.yaml' >> $GITHUB_ENV
          echo '_type: prompt' > coverage.yaml
          echo 'input_variables:' >> coverage.yaml
          echo '    ["diff"]' >> coverage.yaml
          echo 'template: |' >> coverage.yaml
          echo '  당신은 경험이 풍부한 소프트웨어 개발자입니다.' >> coverage.yaml
          echo '  ' >> coverage.yaml
          echo '  pull request에 제출된 코드에 대해 유닛 테스트 케이스를 작성하세요.' >> coverage.yaml
          echo '  모든 함수, 메소드, 그리고 시나리오에 대한 포괄적인 커버리지를 보장하여 구현의 정확성과 신뢰도를 검증하세요. 결과는 한글로 작성합니다.' >> coverage.yaml
          echo '  ' >> coverage.yaml
          echo '  {diff}' >> coverage.yaml
          echo 'PROMPT_COVERAGE=$(pwd)/coverage.yaml' >> $GITHUB_ENV
          echo '_type: prompt' >> summary.yaml
          echo 'input_variables:' >> summary.yaml
          echo '    ["diff"]' >> summary.yaml
          echo 'template: |' >> summary.yaml
          echo '  개발자가 GitHub에 제출한 pull request에서 변경된 다음 파일을 한글로 요약하세요.' >> summary.yaml
          echo '  주요 수정, 추가, 삭제 및 파일 내의 중요한 업데이트에 중점을 둡니다.' >> summary.yaml
          echo '  요약에 파일 이름을 포함하지 말고 요약에 글머리 기호를 붙여 나열합니다.' >> summary.yaml
          echo '  ' >> summary.yaml
          echo '  {diff}' >> summary.yaml
          echo 'PROMPT_SUMMARY=$(pwd)/summary.yaml' >> $GITHUB_ENV

      - name: Modify _review.py
        run: |
          echo '_CHECKS["SUMMARY_CHECKS"][0]["goal"] = "이 PR의 변경 사항을 개선하기 위한 제안을 제시해주세요. 만약 PR에 명확한 문제가 없다면, 제안이 필요 없다고 언급하세요. 결과는 한글로 작성하세요."' >> /home/runner/work/data-gcp-cloud-function/data-gcp-cloud-function/.env/lib/python3.11/site-packages/gpt_review/_review.py
          echo '_CHECKS["RISK_CHECKS"][0]["goal"] = "Git diff에서 중대한 변경 사항을 감지하여 한글로 결과를 작성합니다. 다음은 중대한 변경 사항을 초래할 수 있는 몇 가지 요인입니다. - 기본값이 없고 필수인 공개 함수에 새로운 매개변수 추가"' >> /home/runner/work/data-gcp-cloud-function/data-gcp-cloud-function/.env/lib/python3.11/site-packages/gpt_review/_review.py

      - name: Review PR and make comment
        shell: bash
        run: |
          source .env/bin/activate

          gpt github review \
            --access-token $GITHUB_TOKEN \
            --pull-request $PATCH_PR \
            --repository $PATCH_REPO
        env:
          ACTION_REF: ${{ github.action_ref || env.BRANCH }}
          GIT_COMMIT_HASH: ${{ github.event.pull_request.head.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINK: "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ORG_KEY: ${{ secrets.OPENAI_ORG_KEY }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          BRANCH: ${{ env.BRANCH }}
          PATCH_PR: ${{ github.event.pull_request.number }}
          PATCH_REPO: ${{ github.repository }}
          FULL_SUMMARY: true
          FILE_SUMMARY: false
          TEST_SUMMARY: false
          BUG_SUMMARY: false
          RISK_SUMMARY: false
          RISK_BREAKING: false
